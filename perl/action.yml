name: install/cache perl tools

inputs:
  tools:   { required: true,  type: string }
  cache:   { required: false, type: string, default: yes }
  sudo:    { required: false, type: boolean, default: false }
  key:     { required: false, type: string }
  verbose: { required: false, type: boolean, default: false }

outputs:
  cache-hit:
    value: ${{ steps.install.outputs.cache-hit }}

runs:
  using: composite
  steps:

    - id: setup
      shell: bash
      run: |
        : setup use-perl-tools
        case "${{ inputs.cache }}" in
            yes|workflow) cache="${{ inputs.cache }}" ;;
            *)            cache=no ;;
        esac
        tools="${{ inputs.tools }}"
        [ "${{ inputs.sudo }}" == 'true' ] && sudo=sudo
        given_key="${{ inputs.key }}"
        version_key="$( perl -V | (md5sum||md5) | awk '{print $1}' )"
        key="${given_key:+$given_key-}${version_key}"
        local_base="$HOME/perl5"
        mkdir -p $local_base/{bin,lib/perl5}
        bin="$local_base/bin"
        if [[ ! "$PATH" =~ $bin ]]
        then
            export PATH="$local_base/bin:$PATH"
            echo "$local_base/bin" >> $GITHUB_PATH
        fi
        lib="$local_base/lib/perl5"
        cpanm=cpanm
        [ "${{ inputs.verbose }}" = true ] && cpanm+=" -v"
        if [[ ! "$PERL5LIB" =~ $lib ]]
        then
            export PERL5LIB="$lib${PERL5LIB:+:$PERL5LIB}"
            export PERL_LOCAL_LIB_ROOT="$local_base${PERL_LOCAL_LIB_ROOT:+:$PERL_LOCAL_LIB_ROOT}"
            echo "PERL5LIB=$PERL5LIB"                       >> $GITHUB_ENV
            echo "PERL_LOCAL_LIB_ROOT=$PERL_LOCAL_LIB_ROOT" >> $GITHUB_ENV
        fi
        install_base="$($GITHUB_ACTION_PATH/install-base.pl)"
        # remove App::cpanminus from install list
        declare -a install
        for arg in $tools
        do
            [ "$arg" != App::cpanminus ] && install+=($arg)
        done
        cat << END
        ::set-output name=cache::$cache
        ::set-output name=perl::${sudo:+$sudo }perl
        ::set-output name=key::$key
        ::set-output name=command::${sudo:+$sudo }${cpanm} -n
        ::set-output name=install_base::$install_base
        ::set-output name=install::${install[@]}
        END
        perl -v
  
    - id: install-cpanminus
      uses: tecoli-com/actions-install-and-cache@v0
      with:
        command:   cpanm --version || curl -sL https://cpanmin.us | ${{ steps.setup.outputs.perl }} - -n
        directory: ${{ steps.setup.outputs.install_base }}
        key:       ${{ steps.setup.outputs.key }}
        target:    App::cpanminus
        cache:     ${{ inputs.cache }}
        verbose:   ${{ inputs.verbose }}
        sudo:      ${{ inputs.sudo }}
  
    - id: check-cpanminus
      shell: bash
      run: |
        : check cpanm command in path
        if cpanm="$(which cpanm)"
        then
            echo "found $cpanm"
        else
            for dir in ${{ steps.setup.outputs.install_base }}
            do
                [ -x $dir/cpanm ] && echo $dir | tee -a $GITHUB_PATH && break
            done
        fi

    - id: install
      if: steps.setup.outputs.install != ''
      uses: tecoli-com/actions-install-and-cache@v0
      with:
        command:   ${{ steps.setup.outputs.command }}
        directory: ${{ steps.setup.outputs.install_base }}
        key:       ${{ steps.setup.outputs.key }}
        target:    ${{ steps.setup.outputs.install }}
        cache:     ${{ inputs.cache }}
        verbose:   ${{ inputs.verbose }}
        sudo:      ${{ inputs.sudo }}
