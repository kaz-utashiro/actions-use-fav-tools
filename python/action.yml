name: install/cache python tools

inputs:
  tools:     { required: true,  type: string }
  cache:     { required: false, type: string,  default: yes }
  version:   { required: false, type: string,  default: 3 }
  key:       { required: false, type: string }

outputs:
  cache-hit:
    value: ${{ steps.update.outputs.cache-hit }}

runs:
  using: composite
  steps:

    - id: setup
      shell: bash
      run: |
        : setup use-python-tools
        version="${{ inputs.version }}"
        python="python$version"
        pip="pip$version"
        prefix=/usr/local
        command="sudo $pip install --prefix $prefix"
        pip_version="$($pip --version 2>&1)"
        if [[ "$pip_version" =~ \(python\ ([0-9]+\.[0-9]+)\) ]]
        then
            lib_python="$prefix/lib/python${BASH_REMATCH[1]}"
        fi
        if [ -d "$lib_python" ]
        then
            directory="$prefix/bin $lib_python"
        else
            directory="$prefix/bin $(echo $prefix/lib/python*)"
        fi
        given_key="${{ inputs.key }}"
        version_key="$( echo "$pip_version" | (md5sum||md5) | awk '{print $1}' )"
        key="${given_key:+$given_key-}${version_key}"
        echo "::set-output name=python::$python"
        echo "::set-output name=pip::$pip"
        echo "::set-output name=command::$command"
        echo "::set-output name=directory::$directory"
        echo "::set-output name=key::$key"

    - id: update
      uses: office-tecoli/actions-install-and-cache@v0
      with:
        command:   ${{ steps.setup.outputs.command }}
        directory: ${{ steps.setup.outputs.directory }}
        key:       ${{ steps.setup.outputs.key }}
        target:    ${{ inputs.tools }}
        cache:     ${{ inputs.cache }}

    - id: check
      shell: bash
      run: |
        : check
        tools="${{ inputs.tools }}"
        pip="${{ steps.setup.outputs.pip}}"
        $pip show -f $tools
